---
import { ChevronDown } from "lucide-react";

const { links } = Astro.props as {
  links: { href: string; text: string }[];
};
---

<nav class="relative flex items-center justify-center">
  <!-- Desktop Navigation -->
  <div class="hidden md:flex space-x-10 justify-center">
    {
      links.map((link) => (
        <a
          href={link.href}
          class="transition-all cursor-pointer hover:bg-muted/20 px-4 py-2 rounded-md"
        >
          {link.text}
        </a>
      ))
    }
  </div>

  <!-- Mobile Navigation -->
  <div class="md:hidden mx-auto">
    <div
      id="mobile-menu-button"
      aria-label="Open menu"
      class="transition-all cursor-pointer text-center relative flex items-center px-8"
    >
      Menu
      <ChevronDown
        id="mobile-menu-button-icon"
        className="size-4 transition-all absolute -right-0 top-1/2 -translate-y-1/3"
      />
    </div>

    <div
      id="mobile-menu"
      class="absolute py-1 px-2 top-14 right-1/2 translate-x-1/2 w-48 bg-background border border-border/20 border-t-0 rounded-md rounded-t-none shadow-lg hidden"
    >
      {
        links.map((link) => (
          <a
            href={link.href}
            class="block px-4 py-3 text-sm text-center hover:bg-muted/20  transition-all hover:hover-secondary border-b border-border/40 last:border-0"
          >
            {link.text}
          </a>
        ))
      }
    </div>
  </div>
</nav>

<script>
  const button = document.getElementById("mobile-menu-button");
  const buttonIcon = document.getElementById("mobile-menu-button-icon");
  const menu = document.getElementById("mobile-menu");
  const currentPath = window.location.pathname;
  const currentLink = document.querySelector(`a[href="${currentPath}"]`);

  if (currentLink) {
    currentLink.classList.add("bg-muted/10");
  }

  button?.addEventListener("click", () => {
    menu?.classList.toggle("hidden");
    buttonIcon?.classList.toggle("rotate-180");
  });

  // Close the menu when clicking outside
  document.addEventListener("click", (event) => {
    if (
      !button?.contains(event.target as Node) &&
      !menu?.contains(event.target as Node)
    ) {
      menu?.classList.add("hidden");
      buttonIcon?.classList.remove("rotate-180");
    }
  });
</script>
