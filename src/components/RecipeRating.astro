---
import { getRecipeDataById, viewRecipeById } from "@services/recipes"; // Function to fetch from DB
import { getSession } from "auth-astro/server";
import RateRecipe from "./react/RateRecipe";
import { getUser } from "@/services/auth";
import { db } from "@/db";
import { rates } from "@/db/schema/rates";
import { and, eq } from "drizzle-orm";

const { id } = Astro.props;

await viewRecipeById(id);

const recipe = await getRecipeDataById(id);

const session = await getSession(Astro.request);

let user = null;

if (session && session.user && session.user.email) {
  user = await getUser(session.user.email, "email");
}

const { name, rating, ratingCount, views } = recipe ?? {};

let userRating = 0;
if (user && user.id) {
  userRating =
    (await db
      .select()
      .from(rates)
      .where(and(eq(rates.recipeId, id), eq(rates.userId, user.id)))
      .then((rate) => rate[0]?.rate)) ?? 0;
}
---

<section>
  <p>👤 <strong>Author:</strong> {name}</p>
  <p>⭐ <strong>Rating:</strong> {rating ?? 0} / 5 ⭐</p>
  <p>👥 <strong>Rating Count:</strong> {ratingCount}</p>
  <p>👀 <strong>Views:</strong> {views}</p>

  {
    user && (
      <RateRecipe
        client:only="react"
        recipeId={id}
        userId={user.id}
        initialRating={userRating}
      />
    )
  }
</section>
