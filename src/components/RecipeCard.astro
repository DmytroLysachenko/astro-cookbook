---
import StarRating from "./StarRating.astro";
import { capitalize } from "@/lib/utils";
import type { TRecipeCollectionData } from "@/types";
import Image from "astro/components/Image.astro";

const { recipe, ratingData: { rating = 0, ratingCount = 0 } = {} } =
  Astro.props as {
    recipe: TRecipeCollectionData;
    ratingData?: { rating: number; ratingCount: number };
  };
---

<div class="card">
  <a
    href={`/recipes/${recipe.id}`}
    class="rounded-lg overflow-hidden block"
  >
    <Image
      src={recipe.mainImage || "/placeholder.svg?height=250&width=400"}
      alt={recipe.title}
      width={400}
      height={250}
      class="w-full h-48 object-cover"
    />
  </a>

  <div class="p-4">
    <div class="text-sm uppercase font-medium text-gray-500 mb-1">
      {recipe.cuisine}
    </div>

    <h2 class="text-xl font-bold mb-2">
      <a
        href={`/recipes/${recipe.id}`}
        class="text-gray-900 hover:text-red-500 transition-colors duration-300 line-clamp-2"
      >
        {recipe.title}
      </a>
    </h2>

    <div class="flex items-center mb-2">
      <StarRating rating={rating || 0} />
      <span class="ml-2 text-sm text-gray-600">{ratingCount} Ratings</span>
    </div>

    <p class="text-sm text-gray-600">
      Cook time: {recipe.cookingTime} minutes |
    </p>
    <p class="text-sm text-gray-600">
      Portions: {recipe.portions}
    </p>

    <div class="mt-2 flex flex-wrap gap-2">
      {
        recipe.categories.map((category: string) => (
          <span class="text-xs bg-gray-200 text-gray-700 px-2 py-1 rounded-full">
            {capitalize(category)}
          </span>
        ))
      }
    </div>
  </div>
</div>
