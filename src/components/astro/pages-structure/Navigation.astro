---
import { ChevronDown } from "lucide-react";

interface Props {
  links: { href: string; text: string }[];
}

const { links } = Astro.props;
---

<nav
  id="header-nav"
  class="flex items-center justify-center min-h-14"
>
  <div class="hidden md:flex space-x-10 justify-center">
    {
      links.map((link) => (
        <a
          href={link.href}
          class="transition-all cursor-pointer hover:bg-muted/20 px-4 py-2 rounded-md line-clamp-1 text-base "
        >
          {link.text}
        </a>
      ))
    }
  </div>

  <div class="md:hidden mx-auto">
    <div
      id="mobile-menu-button"
      aria-label="Open menu"
      class="transition-all cursor-pointer text-center relative flex items-center px-8"
    >
      Menu
      <ChevronDown
        id="mobile-menu-button-icon"
        className="size-4 transition-all absolute -right-0 top-1/2 -translate-y-1/3"
      />
    </div>

    <div
      id="mobile-menu"
      class="absolute w-full top-full right-1/2 translate-x-1/2 border border-border/20 rounded-md rounded-t-none shadow-lg hidden min-w-[360px]"
    >
      {
        links.map((link) => (
          <a
            href={link.href}
            class="block w-full px-4 py-3 text-sm text-center hover:bg-muted/90 backdrop-blur-md transition-all hover:hover-secondary border-b border-border/40 last:border-0 bg-background/90 text-foreground"
          >
            {link.text}
          </a>
        ))
      }
    </div>
  </div>
</nav>

<script>
  const button = document.getElementById("mobile-menu-button");
  const buttonIcon = document.getElementById("mobile-menu-button-icon");
  const menu = document.getElementById("mobile-menu");
  const navigationPanel = document.getElementById("header-nav");
  const currentPath = window.location.pathname;

  const currentLink = navigationPanel?.querySelector(
    `a[href="${currentPath}"]`
  );

  if (currentLink) {
    currentLink.classList.add("bg-muted/30");
  }

  button?.addEventListener("click", () => {
    menu?.classList.toggle("hidden");
    buttonIcon?.classList.toggle("rotate-180");
  });

  document.addEventListener("click", (event) => {
    if (
      !button?.contains(event.target as Node) &&
      !menu?.contains(event.target as Node)
    ) {
      menu?.classList.add("hidden");
      buttonIcon?.classList.remove("rotate-180");
    }
  });
</script>
