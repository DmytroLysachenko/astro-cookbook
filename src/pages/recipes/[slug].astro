---
import { type CollectionEntry, getCollection } from "astro:content";
import { render } from "astro:content";
import { Image } from "astro:assets";

import RecipeLike from "@/components/astro/recipe-page/RecipeLike.astro";
import CommentsSection from "@/components/astro/recipe-page/CommentsSection.astro";
import RecipeRating from "@/components/astro/recipe-page/RecipeRating.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import type { ImageMetadata } from "astro";

export async function getStaticPaths() {
  const recipes = await getCollection("recipe");

  return recipes.map((recipe) => ({
    params: { slug: recipe.data.slug },
    props: recipe,
  }));
}

type Props = CollectionEntry<"recipe">;

const recipe = Astro.props;

const { previewImage, title, description, slug } = recipe.data;

const allPreviews = import.meta.glob<{ default: ImageMetadata }>(
  `/src/images/previews/*.{png,jpg,jpeg,webp}`,
  { eager: true }
);

const localImage = allPreviews[`/src/images/previews/${previewImage}`].default;

const { Content } = await render(recipe);
---

<BaseLayout
  title={`Cooking Spot | ${title}`}
  description={description}
  image={localImage.src}
  background={true}
>
  <div class="content">
    <Image
      src={localImage}
      alt={title}
      class="w-full max-w-[700px] object-cover"
      width={400}
      height={400}
      loading={"eager"}
      fetchpriority={"high"}
    />
    <p class="text-base">
      ðŸ“† Created on: <span class="font-bold">{recipe.data.created}</span>
    </p>

    <h1 class="relative flex items-center gap-4">
      {title}
      <RecipeLike
        server:defer
        slug={slug}
      />
    </h1>

    <RecipeRating
      server:defer
      slug={slug}
    />

    <Content />

    <CommentsSection
      server:defer
      slug={slug}
    />
  </div>

  <script define:vars={{ slug }}>
    document.addEventListener("DOMContentLoaded", async () => {
      await fetch(`/api/increment-views`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          recipeSlug: slug,
        }),
      });
    });
  </script>
</BaseLayout>
