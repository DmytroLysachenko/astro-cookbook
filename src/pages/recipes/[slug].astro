---
import { type CollectionEntry, getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";

import { render } from "astro:content";
import RecipeRating from "@/components/RecipeRating.astro";
import { Image } from "astro:assets";

export async function getStaticPaths() {
  const recipes = await getCollection("recipe");

  return recipes.map((recipe) => ({
    params: { slug: recipe.data.slug },
    props: recipe,
  }));
}

type Props = CollectionEntry<"recipe">;

const recipe = Astro.props;

const { mainImage, title, description, slug } = recipe.data;

const { Content } = await render(recipe);
---

<BaseLayout
  title={title}
  description={description}
  image={mainImage}
>
  <div class="content">
    <Image
      src={mainImage}
      alt={title}
      class="w-full"
      width={400}
      height={400}
    />

    <h1>{title}</h1>

    <RecipeRating
      server:defer
      slug={slug}
    />

    <Content />
  </div>
  <script define:vars={{ slug }}>
    document.addEventListener("DOMContentLoaded", async () => {
      console.log("incrementing views", slug);
      await fetch(`/api/increment-views`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          recipeSlug: slug,
        }),
      });
    });
  </script>
</BaseLayout>
